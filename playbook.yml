---
- name: Deploy App
  hosts: avt
  become: true
  tasks:
    - name: Atualizar cache do apt
      apt:
        update_cache: yes

    - name: Instalar dependências do Docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Adicionar a chave GPG oficial do Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Adicionar o repositório do Docker ao APT
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Atualizar cache do apt após adicionar o repositório do Docker
      apt:
        update_cache: yes

    - name: Instalar Docker
      apt:
        name: docker-ce
        state: present

    - name: Instalar Python
      apt:
        name: python3
        state: present

    - name: Instalar pip
      apt:
        name: python3-pip
        state: present

    - name: Instalar AWS CLI
      ansible.builtin.command:
        cmd: "pip3 install awscli"

    - name: Fazer login no Amazon ECR
      ansible.builtin.shell:
        cmd: "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 054507659414.dkr.ecr.us-east-1.amazonaws.com"

    - name: adicionar usuario ao grupo Docker
      ansible.builtin.shell:
        cmd: "sudo usermod -aG docker $USER"

    - name: restart docker
      ansible.builtin.shell:
        cmd: "service docker restart"

- name: Executar docker-compose up
  hosts: avt
  become: yes
  tasks:
    - name: Pull Docker image
      docker_image:
        name: "054507659414.dkr.ecr.us-east-1.amazonaws.com/front:latest"
        source: pull
    - name: Run Docker container
      docker_container:
        name: react_frontend
        image: "054507659414.dkr.ecr.us-east-1.amazonaws.com/front:latest"
        state: present
        ports:
          - "80:80"
